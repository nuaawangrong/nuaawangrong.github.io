<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Welcome</title>
    <url>/2021/06/04/%E4%BD%A0%E5%A5%BD/</url>
    <content><![CDATA[<h1 id="你好呀"><a href="#你好呀" class="headerlink" title="你好呀"></a>你好呀</h1><h2 id="欢迎来到我的博客"><a href="#欢迎来到我的博客" class="headerlink" title="欢迎来到我的博客"></a>欢迎来到我的博客</h2><span id="more"></span>

<figure class="highlight c"><figcaption><span>C</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Welcome to my Blog!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Welcome to my Blog!&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Welcome to my Blog&quot;</span>)</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><figcaption><span>Javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Welcome to my Blog&quot;</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><figcaption><span>Shell</span></figcaption><table><tr><td class="code"><pre><span class="line">echo Welcome to my Blog</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Vim笔记</title>
    <url>/2021/06/08/vim%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>第一次接触Vim是在大一的时候，计算机导论实验课，需要写python的程序，实验环境在实验楼的虚拟机里。第一节课就是熟悉Linux操作的Vim的编辑，仍然记得Vim进入后无法退出的场景，不禁直呼这软件设计是如此反人类！！！hhhhhhh<br>不过后面又继续敲代码，在自己的电脑上装虚拟机，买了自己的服务器，又不得不继续和Vim打交道。时不时的就得找找Vim的命令，但是掌握的命令多了起来之后，发现，诶，其实也还挺好用的嘛。嗯，真香！！！<br>不过Vim命令太多，只能说不常用就会忘记，写这样一篇笔记，也是为了方便加深Vim命令的印象，能提高Vim的使用效率吧。</p>
<span id="more"></span>
<h2 id="初识Vim"><a href="#初识Vim" class="headerlink" title="初识Vim"></a>初识Vim</h2><p><code>Vim</code>其实就是一个文本编辑器，类似于<code>VScode</code>和<code>Notepade++</code>,但<code>Vim</code>和其他的编辑器不一样，有着三种模式和命令操作，强大的模式加命令组合可以使得用户少用甚至不用鼠标，可以更专注于文本的处理，有着更流畅的工作节奏。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol>
<li>Linux <figure class="highlight shell"><figcaption><span>shell</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> http://github.com/vim/vim.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> vim/src</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make install</span></span><br></pre></td></tr></table></figure></li>
<li>windows<br> 下载<code>gVim</code>软件，按提示安装即可。</li>
</ol>
<p>安装完成后使用命令<code>vim --version</code>查看<code>Vim</code>版本，验证是否安装成功。</p>
<h3 id="通过-vimrc文件配置Vim"><a href="#通过-vimrc文件配置Vim" class="headerlink" title="通过.vimrc文件配置Vim"></a>通过<code>.vimrc</code>文件配置<code>Vim</code></h3><p>有的可能不是隐藏文件，需要根据具体环境具体配置。</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span>                      <span class="comment">&quot; 支持语法高亮</span></span><br><span class="line"><span class="keyword">filetype</span> plugin <span class="built_in">indent</span> <span class="keyword">on</span>      <span class="comment">&quot; 启用根据文件类型自动缩进</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> autoindent                 <span class="comment">&quot; 开始新行时处理缩进</span></span><br><span class="line"><span class="keyword">set</span> expandtab                  <span class="comment">&quot; 将制表符Tab展开为空格，对Python尤其有用</span></span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">4</span>                  <span class="comment">&quot; 要计算的空格数 </span></span><br><span class="line"><span class="keyword">set</span> <span class="built_in">shiftwidth</span>=<span class="number">4</span>               <span class="comment">&quot; 用于自动缩进的空格数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> backspace=<span class="number">2</span>                <span class="comment">&quot; 在多数终端上修正退格键Backspace的行为</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">colorscheme</span> murphy             <span class="comment">&quot; 修改配色</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode刷题</title>
    <url>/2021/06/07/Leetcode%E5%88%B7%E9%A2%98/</url>
    <content><![CDATA[<h1 id="Leetcode刷题记录"><a href="#Leetcode刷题记录" class="headerlink" title="Leetcode刷题记录"></a>Leetcode刷题记录</h1><h1 id="每日一题"><a href="#每日一题" class="headerlink" title="每日一题"></a>每日一题</h1><span id="more"></span>
<h2 id="日期：2021年6月7日"><a href="#日期：2021年6月7日" class="headerlink" title="日期：2021年6月7日"></a>日期：2021年6月7日</h2><h3 id="题目：-494-目标和"><a href="#题目：-494-目标和" class="headerlink" title="题目：[494] 目标和"></a>题目：[494] <a href="https://leetcode-cn.com/problems/target-sum/description/">目标和</a></h3><h3 id="描述："><a href="#描述：" class="headerlink" title="描述："></a>描述：</h3><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line">给你一个整数数组 nums 和一个整数 <span class="keyword">target</span> 。</span><br><span class="line"></span><br><span class="line">向数组中的每个整数前添加 <span class="string">&#x27;+&#x27;</span> 或 <span class="string">&#x27;-&#x27;</span> ，然后串联起所有整数，可以构造一个 表达式 ：</span><br><span class="line"></span><br><span class="line">例如，nums = [<span class="number">2</span>, <span class="number">1</span>] ，可以在 <span class="number">2</span> 之前添加 <span class="string">&#x27;+&#x27;</span> ，在 <span class="number">1</span> 之前添加 <span class="string">&#x27;-&#x27;</span> ，然后串联起来得到表达式 <span class="string">&quot;+2-1&quot;</span> 。</span><br><span class="line">返回可以通过上述方法构造的、运算结果等于 <span class="keyword">target</span> 的不同 表达式 的数目。</span><br></pre></td></tr></table></figure>
<h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">示例 1：</span><br><span class="line"></span><br><span class="line">输入：nums = [1,1,1,1,1], target = 3</span><br><span class="line">输出：5</span><br><span class="line">解释：一共有<span class="number"> 5 </span>种方法让最终目标和为<span class="number"> 3 </span>。</span><br><span class="line">-1 +<span class="number"> 1 </span>+<span class="number"> 1 </span>+<span class="number"> 1 </span>+<span class="number"> 1 </span>= 3</span><br><span class="line">+1 -<span class="number"> 1 </span>+<span class="number"> 1 </span>+<span class="number"> 1 </span>+<span class="number"> 1 </span>= 3</span><br><span class="line">+1 +<span class="number"> 1 </span>-<span class="number"> 1 </span>+<span class="number"> 1 </span>+<span class="number"> 1 </span>= 3</span><br><span class="line">+1 +<span class="number"> 1 </span>+<span class="number"> 1 </span>-<span class="number"> 1 </span>+<span class="number"> 1 </span>= 3</span><br><span class="line">+1 +<span class="number"> 1 </span>+<span class="number"> 1 </span>+<span class="number"> 1 </span>-<span class="number"> 1 </span>= 3</span><br><span class="line">示例 2：</span><br><span class="line"></span><br><span class="line">输入：nums = [1], target = 1</span><br><span class="line">输出：1</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">提示：</span><br><span class="line"></span><br><span class="line">1 &lt;= nums.length &lt;= 20</span><br><span class="line">0 &lt;= nums[i] &lt;= 1000</span><br><span class="line">0 &lt;= sum(nums[i]) &lt;= 1000</span><br><span class="line">-1000 &lt;= target &lt;= 100</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//解法一：</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findTargetSumWays</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;nums, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        cnt = <span class="built_in">count</span>(nums, target, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;nums, <span class="keyword">int</span> target, <span class="keyword">int</span> res, <span class="keyword">int</span> deep)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (deep == nums.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (target == res)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        cnt += <span class="built_in">count</span>(nums, target, res + nums[deep], deep + <span class="number">1</span>);</span><br><span class="line">        cnt += <span class="built_in">count</span>(nums, target, res + (<span class="number">-1</span>) * nums[deep], deep + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>用的是递归解决，但是花费时间很长，还可以再优化优化。</p>
<h2 id="日期：2021年6月8日"><a href="#日期：2021年6月8日" class="headerlink" title="日期：2021年6月8日"></a>日期：2021年6月8日</h2><h3 id="题目：-169-多数元素"><a href="#题目：-169-多数元素" class="headerlink" title="题目：[169] 多数元素"></a>题目：[169] <a href="https://leetcode-cn.com/problems/majority-element/">多数元素</a></h3><h3 id="描述：-1"><a href="#描述：-1" class="headerlink" title="描述："></a>描述：</h3><figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">给定一个大小为 <span class="built_in">n</span> 的数组，找到其中的多数元素。多数元素是指在数组中出现次数 大于 ⌊ <span class="built_in">n</span>/<span class="number">2</span> ⌋ 的元素。</span><br><span class="line"></span><br><span class="line">你可以假设数组是非空的，并且给定的数组总是存在多数元素。</span><br></pre></td></tr></table></figure>
<h3 id="示例：-1"><a href="#示例：-1" class="headerlink" title="示例："></a>示例：</h3><figure class="highlight less"><table><tr><td class="code"><pre><span class="line">示例 <span class="selector-tag">1</span>：</span><br><span class="line"></span><br><span class="line">输入：<span class="selector-attr">[3,2,3]</span></span><br><span class="line">输出：<span class="selector-tag">3</span></span><br><span class="line">示例 <span class="selector-tag">2</span>：</span><br><span class="line"></span><br><span class="line">输入：<span class="selector-attr">[2,2,1,1,1,2,2]</span></span><br><span class="line">输出：<span class="selector-tag">2</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">进阶：</span><br><span class="line"></span><br><span class="line">尝试设计时间复杂度为 <span class="selector-tag">O</span>(n)、空间复杂度为 <span class="selector-tag">O</span>(<span class="number">1</span>) 的算法解决此问题。</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//解法一：</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;nums)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mp;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;::iterator it = mp.<span class="built_in">find</span>(nums[i]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (it == mp.<span class="built_in">end</span>())</span><br><span class="line">                mp[nums[i]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                mp[nums[i]]++;</span><br><span class="line">            <span class="keyword">if</span> (mp[nums[i]] &gt; (nums.<span class="built_in">size</span>() / <span class="number">2</span>))</span><br><span class="line">                <span class="keyword">return</span> nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h3><p>使用C++中STL的map结构，遍历一遍数组，将数组元素加入到map中，并记录出现的次数，及时判断出现的次数是否大于n/2。<br>时间复杂度为O(n),空间复杂度为O(n)。按照题目提示，空间复杂度上还可继续优化。</p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>Leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝色降落伞</title>
    <url>/2021/06/04/%E8%93%9D%E8%89%B2%E9%99%8D%E8%90%BD%E4%BC%9E/</url>
    <content><![CDATA[<p>打开窗穿过走廊，下起雨来的弄堂</p>
<p>风里飘散的头发，门里空荡荡的家</p>
<p>我枕头下的梦想 ，我书包里的惆怅</p>
<p>她们等着我发芽，等到一地的落花</p>
<span id="more"></span>

<hr>
<p>我蓝色的降落伞，在天空里那么孤单</p>
<p>飘向翻涌的人海，望着我被掩埋</p>
<p>那个青涩的男孩，在岁月里那么孤单</p>
<p>蓦然跳下老秋千，忽明忽暗地走远</p>
<hr>
<p>打开窗穿过走廊，下起雨来的心房</p>
<p>风里飘散的头发，门外空荡荡的家</p>
<p>从不开始的冬天，从未晴朗的屋檐</p>
<p>没人教会我想念，烧成灰烬的木棉</p>
<hr>
<p>我蓝色的降落伞，在天空里那么孤单</p>
<p>飘向翻涌的人海，望着我被掩埋</p>
<p>那个青涩的男孩，在岁月里那么孤单</p>
<p>他嘴角的那根烟，忽明忽暗地走远</p>
<hr>
<p>蓝色的降落伞，在天空里那么孤单</p>
<p>飘向翻涌的人海，望着我被掩埋</p>
<p>那个青涩的男孩，在岁月里那么孤单</p>
<p>他嘴角的那根烟，忽明忽暗地走远</p>
]]></content>
      <categories>
        <category>歌词</category>
      </categories>
      <tags>
        <tag>周深</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/06/04/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
